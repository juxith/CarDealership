@model CarDealership.UI.Models.PurchaseVM
@{
    ViewBag.Title = "SalesIndex";
}

<h2>Sales</h2>

<div style="border: solid">
    <p>Quick Search</p>

    <input type="text" placeholder="Enter make, model, or year" id="searchTerm" />
    <label>Price</label>
    <select id="minPrice" required>
        <option value="0" selected="selected">No Min</option>
        @for (var i = 5000; i <= 50000; i += 5000)
        {
            var setMin = i.ToString().Insert(i.ToString().Length - 3, ",");
            <option value="@i">$@setMin</option>
        }
    </select>
    <select id="maxPrice" required>
        <option value="0" selected="selected">No Max</option>
        @for (var i = 10000; i <= 80000; i += 5000)
        {
            var setMax = i.ToString().Insert(i.ToString().Length - 3, ",");
            <option value="@i">$@setMax</option>
        }
    </select>
    <label>Year</label>
    <select id="minYear" required>
        <option value="0" selected="selected">No Min</option>
        @for (var i = 2018; i >= 1990; i--)
        {
            <option value="@i">@i</option>
        }
    </select>
    <select id="maxYear" required>
        <option value="0" selected="selected">No Max</option>
        @for (var i = 2018; i >= 1990; i--)
        {
            <option value="@i">@i</option>
        }
    </select>
    <button class="btn btn-default" id="salesCarSearchButton">Search</button>
</div>
<div id="searchResultsSection">
    <h2>Search Result</h2>
    <div class="container">
        <p id="salesSearchResults"></p>
    </div>
</div>

<script src="~/Scripts/Sales.js"></script>
<!--add forms and purchase view model to get a drop down list of purchase Types. I could hardcode to save time and effort-->
